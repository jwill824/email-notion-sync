name: "deploy-app-azure"


on:
  push:
    branches:
      - main
    paths:
      - 'EmailNotionSync/EmailNotionSync.AppHost/**'
      - 'EmailNotionSync/EmailNotionSync.GmailApi/**'
      - 'EmailNotionSync/EmailNotionSync.NotionApi/**'
  workflow_dispatch:

permissions:
  contents: read


jobs:
  build-gmailapi-image:
    name: Build and Push GmailApi Image
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'EmailNotionSync/EmailNotionSync.GmailApi/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push GmailApi image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/gmailapi:latest
          docker build -t $IMAGE_NAME \
            --file ./EmailNotionSync/EmailNotionSync.GmailApi/Dockerfile \
            .
          docker push $IMAGE_NAME

  deploy-gmailapi:
    name: Deploy GmailApi Container App
    runs-on: ubuntu-latest
    needs: [build-gmailapi-image]
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'EmailNotionSync/EmailNotionSync.GmailApi/')
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update GmailApi Container App
        run: |
          az containerapp update \
            --name ${{ secrets.AZURE_GMAILAPI_APP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --image ghcr.io/${{ github.repository_owner }}/gmailapi:latest

  build-notionapi-image:
    name: Build and Push NotionApi Image
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'EmailNotionSync/EmailNotionSync.NotionApi/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push NotionApi image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/notionapi:latest
          docker build -t $IMAGE_NAME \
            --file ./EmailNotionSync/EmailNotionSync.NotionApi/Dockerfile \
            .
          docker push $IMAGE_NAME

  deploy-notionapi:
    name: Deploy NotionApi Container App
    runs-on: ubuntu-latest
    needs: [build-notionapi-image]
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'EmailNotionSync/EmailNotionSync.NotionApi/')
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update NotionApi Container App
        run: |
          az containerapp update \
            --name ${{ secrets.AZURE_NOTIONAPI_APP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --image ghcr.io/${{ github.repository_owner }}/notionapi:latest

  build-function-app:
    name: Build and Publish Function App
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'EmailNotionSync/EmailNotionSync.AppHost/')
    needs: [deploy-gmailapi, deploy-notionapi]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore EmailNotionSync/EmailNotionSync.sln

      - name: Build
        run: dotnet build EmailNotionSync/EmailNotionSync.sln --no-restore --configuration Release

      - name: Publish Function App
        run: dotnet publish EmailNotionSync/EmailNotionSync.AppHost/EmailNotionSync.AppHost.csproj --configuration Release --output ./publish

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Function App
        uses: azure/functions-action@v1
        with:
          app-name: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
          package: ./publish
        env:
          AZURE_FUNCTIONAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}